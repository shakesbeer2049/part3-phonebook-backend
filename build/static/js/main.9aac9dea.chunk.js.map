{"version":3,"sources":["Services/phone.js","components/Contacts.js","components/Filter.js","components/Add.js","components/Notification.js","App.js","index.js"],"names":["phoneUrl","axios","get","then","res","data","newContact","post","id","delete","put","Contacts","showContacts","setShowContacts","filtered","setMessage","setErrMessage","useEffect","phoneService","contact","length","className","map","i","name","number","onClick","window","confirm","setTimeout","xmlns","width","height","fill","viewBox","d","fillRule","Filter","setFiltered","onChange","e","filter","toLowerCase","includes","target","value","AddContact","a","useState","setName","setNumber","duplicateName","named","find","onSubmit","preventDefault","alert","console","log","undefined","concat","reset","catch","err","response","htmlFor","type","ErrNotif","errMessage","SuccessNotif","message","Notification","App","Add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aac9dea.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst phoneUrl = \"/api/persons\";\r\n\r\nconst getContacts = () => {\r\n  const req = axios.get(phoneUrl);\r\n  return req.then((res) => res.data);\r\n};\r\n\r\nconst addContact = (newContact) => {\r\n  const req = axios.post(phoneUrl, newContact);\r\n  return req.then((res) => res.data);\r\n};\r\n\r\nconst delContact = (id) => {\r\nreturn axios.delete(`${phoneUrl}/${id}`)\r\n  \r\n};\r\n\r\nconst updateContact = (id,newContact) => {\r\n  const req = axios.put(`${phoneUrl}/${id}`,newContact)\r\n  return req.then(res => res.data)\r\n}\r\n\r\nexport default { getContacts, addContact, delContact, updateContact };\r\n","import phoneService from \"../Services/phone\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Contacts = ({\r\n  showContacts,\r\n  setShowContacts,\r\n  filtered,\r\n  setErrMessage,\r\n  setMessage,\r\n}) => {\r\n  //DELETE NUMBER\r\n  const delNum = (id) => {\r\n    if (window.confirm(\"Click okay to delete the contact\")) {\r\n      phoneService\r\n        .delContact(id)\r\n        .then('holaaaa')\r\n        setMessage(`Contact deleted`);\r\n        setTimeout(() => setMessage(null), 3000);\r\n        setTimeout(() =>  phoneService.getContacts().then((contact) => {\r\n          setShowContacts(contact);\r\n          }), 0);\r\n       \r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    phoneService.getContacts().then((contact) => {\r\n      setShowContacts(contact);\r\n    });\r\n  }, [setShowContacts]);\r\n\r\n  if (filtered.length === 0) {\r\n    return (\r\n      <>\r\n        <div className=\"contact-list\">\r\n          <ul>\r\n            {showContacts.map((contact, i) => (\r\n              <li key={i}>\r\n                {contact.name} {contact.number}\r\n                <button\r\n                  onClick={() => {\r\n                    delNum(contact.id);\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"21\"\r\n                    height=\"21\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-trash\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (filtered.length >= 0) {\r\n    return (\r\n      <>\r\n        <div className=\"contact-list\">\r\n          <ul>\r\n            {filtered.length > 0 ? (\r\n              filtered.map((contact, i) => (\r\n                <li key={i}>\r\n                  {contact.name} {contact.number}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <h3>No Match</h3>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Contacts;\r\n","const Filter = ({ showContacts, setShowContacts, filtered, setFiltered }) => {\r\n  const filter = (e) => {\r\n    setFiltered(\r\n      showContacts.filter((contact) => {\r\n        return contact.name\r\n          .toLowerCase()\r\n          .includes(e.target.value.toLowerCase());\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input onChange={filter} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from \"react\";\r\nimport phoneService from \"../Services/phone\";\r\n\r\n//ADD CONTACT\r\nconst AddContact = ({ showContacts, setShowContacts, setMessage, setErrMessage }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  let a;\r\n  \r\n\r\n  const addContact = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    if (!name || !number) window.alert(\"you blind bro \");\r\n    console.log(name)\r\n    console.log(duplicateName(name))\r\n    \r\n    if (duplicateName(name) !== undefined) {      \r\n      const cfr = window.confirm(\r\n        `${name} is already in the phonebook. Update details?`\r\n      );\r\n      if (cfr) {\r\n        //UPDATE\r\n        phoneService.updateContact(a.id, newContact).then((newContact) => {\r\n          setShowContacts(showContacts.concat(newContact));\r\n          setMessage(`${newContact.name} has been updated.`);\r\n          e.target.reset();\r\n          setName(\"\");\r\n          setNumber(\"\");\r\n          phoneService.getContacts().then((contact) => {\r\n            setShowContacts(contact);\r\n          });\r\n        })\r\n        .catch(err=> {\r\n          console.log(err.response.data.err)\r\n          setErrMessage(err.response.data.err)\r\n          setTimeout(() => setErrMessage(null), 3000);\r\n          \r\n        })\r\n      }\r\n    } else {\r\n     \r\n      phoneService.addContact(newContact).then((newContact) => {\r\n        console.log(newContact)\r\n        setMessage(`${newContact.name} has been added.`);\r\n        phoneService.getContacts().then((contact) => {\r\n          setShowContacts(contact);\r\n        })\r\n        \r\n        \r\n        setTimeout(() => setMessage(null), 3000);\r\n        e.target.reset();\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n      })\r\n      .catch(err=> {\r\n        console.log(err.response.data.err)\r\n        setErrMessage(err.response.data.err)\r\n        setTimeout(() => setErrMessage(null), 3000);\r\n        \r\n      })\r\n    }\r\n  };\r\n\r\n  //DUPLICATE NUMBER\r\n  function duplicateNumber(number) {\r\n    return (a = showContacts.find((num) => num.number === number));\r\n  }\r\n  //duplicate name\r\n  function duplicateName(named) {\r\n    \r\n    return (a = showContacts.find((name) => name.name === named));\r\n  }\r\n\r\n  const nameHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const numHandler = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={addContact}>\r\n        <label htmlFor=\"Name\">Name </label>\r\n        <input type=\"text\" onChange={nameHandler} />\r\n        <br />\r\n        <label htmlFor=\"Number\">Number </label>\r\n        <input type=\"number\" onChange={numHandler} />\r\n        <br />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default AddContact;\r\n","const ErrNotif = ({ errMessage }) => {\r\n  if (errMessage === null) return null;\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"err-message\">{errMessage}</h5>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SuccessNotif = ({ message }) => {\r\n  if (message === null) return null;\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"message\">{message}</h5>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Notification = ({ message, errMessage }) => {\r\n  return (\r\n    <>\r\n      <ErrNotif errMessage={errMessage} />\r\n      <SuccessNotif message={message} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport Filter from \"./components/Filter\";\r\nimport AddContact from \"./components/Add\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [showContacts, setShowContacts] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const [errMessage, setErrMessage] = useState(null);\r\n\r\n  //TODO: CREATE A FORM FOR ADDING CONTACTS :DONE\r\n  //FUNCTION FOR DUPLICATES :DONE\r\n  //FILTER SEARCH BAR : done\r\n  //getdata : done\r\n  // post data: done\r\n  //delete data:\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-container\">\r\n      <h1>Phonebook</h1><hr />\r\n      <Notification message={message} errMessage={errMessage} />\r\n      <div className=\"search\">\r\n      <h2>Search</h2>\r\n      <Filter\r\n        showContacts={showContacts}\r\n        setFiltered={setFiltered}\r\n        filtered={filtered}\r\n      />\r\n      </div>\r\n\r\n      <div className=\"add-contact\">\r\n      <h2>Add Contact</h2>\r\n      <AddContact\r\n        showContacts={showContacts}\r\n        setShowContacts={setShowContacts}\r\n        setMessage={setMessage}\r\n        setErrMessage= {setErrMessage}\r\n      />\r\n      </div>\r\n\r\n     <div className=\"show-contact\">\r\n     <Contacts\r\n        showContacts={showContacts}\r\n        setShowContacts={setShowContacts}\r\n        filtered={filtered}\r\n        setFiltered={setFiltered}\r\n        setMessage={setMessage}\r\n        setErrMessage={setErrMessage}\r\n      />\r\n     </div>\r\n      </div>\r\n    </>\r\n      \r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}